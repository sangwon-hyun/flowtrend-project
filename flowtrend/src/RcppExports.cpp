// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// matrix_function_solve_triangular_sylvester_barebonesC2
Eigen::MatrixXd matrix_function_solve_triangular_sylvester_barebonesC2(const Eigen::MatrixXd& TA, const Eigen::MatrixXd& TB, const Eigen::MatrixXd& C);
RcppExport SEXP _flowtrend_matrix_function_solve_triangular_sylvester_barebonesC2(SEXP TASEXP, SEXP TBSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type TA(TASEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type TB(TBSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_function_solve_triangular_sylvester_barebonesC2(TA, TB, C));
    return rcpp_result_gen;
END_RCPP
}
// dmvnorm_arma_fast
arma::vec dmvnorm_arma_fast(arma::mat const& x, arma::rowvec const& mean, arma::mat const& sigma, bool const logd);
RcppExport SEXP _flowtrend_dmvnorm_arma_fast(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec const& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool const >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnorm_arma_fast(x, mean, sigma, logd));
    return rcpp_result_gen;
END_RCPP
}
// prox_dp
arma::vec prox_dp(arma::vec z, double lam);
RcppExport SEXP _flowtrend_prox_dp(SEXP zSEXP, SEXP lamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    rcpp_result_gen = Rcpp::wrap(prox_dp(z, lam));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_flowtrend_matrix_function_solve_triangular_sylvester_barebonesC2", (DL_FUNC) &_flowtrend_matrix_function_solve_triangular_sylvester_barebonesC2, 3},
    {"_flowtrend_dmvnorm_arma_fast", (DL_FUNC) &_flowtrend_dmvnorm_arma_fast, 4},
    {"_flowtrend_prox_dp", (DL_FUNC) &_flowtrend_prox_dp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_flowtrend(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
